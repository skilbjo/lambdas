#!/usr/bin/env bash
set -eou pipefail

sns_event="$1"

setup(){
  src_dir='/var/task'

  export PATH="${PATH}:${src_dir}"

  source "${src_dir}/util"
  source "${src_dir}/athena"

  install_dependencies
  _decrypt_secrets
}

get_file(){
  local sns_event="$1"

  s3_event="$(echo "$sns_event" | jq -r '.Records[].Sns.Message')"

  file_jq='.Records[].s3.object.key'
  file_json="$(echo "$s3_event" | jq -r "$file_jq")"

  echo "$file_json"
}

cp_file(){
  file="$1"
  partition="$(if [[ "$file" =~ ([0-9]{4}-[0-9]{2}-[0-9]{2}) ]];then echo "${BASH_REMATCH[1]}" ;fi)"

  set +u
  if [[ ! -z $partition ]]; then
    aws s3 cp "s3://skilbjo-logs/${file}" "s3://skilbjo-data/logs/s3/s3uploaddate=${partition}/"
  fi
  set -u
}

echo "$sns_event"

setup && \
  file="$(get_file "$sns_event")" && \
  cp_file "$file" && \
  query "msck repair table logs.s3" &
# ^ will take a while, hence the &

ping_healthchecks "$healthchecks_io_s3_logger"

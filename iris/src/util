#!/usr/bin/env bash
set -eou pipefail

_docker(){
  export UDOCKER_DIR=/tmp
  export UDOCKER_TARBALL='/var/task/udocker-1.1.0-RC2.tar.gz'

  # the udocker binary is included in the app.zip package during the build
  # no further installation is needed
  # !! However !!
  # udocker requires a binary, patchelf to be pre-installed in the docker image
  # patchelf is not installed by-default in the base alpine image. Add this to
  # the Dockerfile: # RUN ["qemu-arm-static","/sbin/apk","-U","add","patchelf"]
  # !! Additionally !!
  # you might not get very far with udocker + Alpine Linux; so try
  # bitnami/minideb as an alternative base image

  udocker install
}

install_dependencies(){
  bin_dir='/tmp/bin'

  export PATH="${PATH}:${bin_dir}"

  mkdir -p /tmp/bin

  _docker

  chmod u+x /tmp/bin/* || :
}

_decrypt(){
  local _name="$(echo $1 | sed 's/_encrypted//')"
  local _encrypted=$(eval echo "\$${1}")
  echo "${_encrypted}" | base64 --decode >"/tmp/.${_name}_encrypted"

  if [[ ! -f /tmp/.${_name} ]]; then
    aws kms decrypt \
      --output text \
      --query Plaintext \
      --ciphertext-blob "fileb:///tmp/.${_name}_encrypted" | \
      base64 --decode \
      >"/tmp/.${_name}"
  fi

  export "${_name}"="$(cat /tmp/.${_name})"
}

_decrypt_secrets(){
  _decrypt email_pw_encrypted
  _decrypt aws_access_key_id_encrypted
  _decrypt aws_secret_access_key_encrypted
}
